/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as InfloatApi from "../../api/index";
import * as core from "../../core";

export const TrainingStatus: core.serialization.ObjectSchema<
    serializers.TrainingStatus.Raw,
    InfloatApi.TrainingStatus
> = core.serialization.object({
    id: core.serialization.string(),
    status: core.serialization.string(),
    currentRound: core.serialization.property("current_round", core.serialization.number()),
    targetRounds: core.serialization.property("target_rounds", core.serialization.number()),
    startTime: core.serialization.property("start_time", core.serialization.date().optional()),
    endTime: core.serialization.property("end_time", core.serialization.date().optional()),
    aggregatedMetrics: core.serialization.property(
        "aggregated_metrics",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
    ),
});

export declare namespace TrainingStatus {
    interface Raw {
        id: string;
        status: string;
        current_round: number;
        target_rounds: number;
        start_time?: string | null;
        end_time?: string | null;
        aggregated_metrics?: Record<string, unknown> | null;
    }
}
