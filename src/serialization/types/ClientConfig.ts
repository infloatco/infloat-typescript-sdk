/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as InfloatApi from "../../api/index";
import * as core from "../../core";

export const ClientConfig: core.serialization.ObjectSchema<serializers.ClientConfig.Raw, InfloatApi.ClientConfig> =
    core.serialization.object({
        modelUrl: core.serialization.property("model_url", core.serialization.string()),
        trainingRounds: core.serialization.property("training_rounds", core.serialization.number().optional()),
        batchSize: core.serialization.property("batch_size", core.serialization.number().optional()),
        learningRate: core.serialization.property("learning_rate", core.serialization.number().optional()),
        optimizer: core.serialization.string().optional(),
        additionalConfig: core.serialization.property(
            "additional_config",
            core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
        ),
    });

export declare namespace ClientConfig {
    interface Raw {
        model_url: string;
        training_rounds?: number | null;
        batch_size?: number | null;
        learning_rate?: number | null;
        optimizer?: string | null;
        additional_config?: Record<string, unknown> | null;
    }
}
