/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../index";
import * as InfloatApi from "../../../api/index";
import * as core from "../../../core";

export const TrainingCreate: core.serialization.Schema<
    serializers.TrainingCreate.Raw,
    Omit<InfloatApi.TrainingCreate, "authorization">
> = core.serialization.object({
    modelId: core.serialization.property("model_id", core.serialization.string()),
    targetRounds: core.serialization.property("target_rounds", core.serialization.number().optional()),
    minClients: core.serialization.property("min_clients", core.serialization.number().optional()),
    maxClients: core.serialization.property("max_clients", core.serialization.number().optional()),
    aggregationStrategy: core.serialization.property("aggregation_strategy", core.serialization.string().optional()),
    config: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
});

export declare namespace TrainingCreate {
    interface Raw {
        model_id: string;
        target_rounds?: number | null;
        min_clients?: number | null;
        max_clients?: number | null;
        aggregation_strategy?: string | null;
        config?: Record<string, unknown> | null;
    }
}
