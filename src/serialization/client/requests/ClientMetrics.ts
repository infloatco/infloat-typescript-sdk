/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../index";
import * as InfloatApi from "../../../api/index";
import * as core from "../../../core";

export const ClientMetrics: core.serialization.Schema<
    serializers.ClientMetrics.Raw,
    Omit<InfloatApi.ClientMetrics, "apiKey">
> = core.serialization.object({
    clientId: core.serialization.property("client_id", core.serialization.string()),
    round: core.serialization.number(),
    loss: core.serialization.number(),
    accuracy: core.serialization.number(),
    trainingSamples: core.serialization.property("training_samples", core.serialization.number()),
    trainingTime: core.serialization.property("training_time", core.serialization.number()),
    additionalMetrics: core.serialization.property(
        "additional_metrics",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
    ),
});

export declare namespace ClientMetrics {
    interface Raw {
        client_id: string;
        round: number;
        loss: number;
        accuracy: number;
        training_samples: number;
        training_time: number;
        additional_metrics?: Record<string, unknown> | null;
    }
}
